#!/bin/bash

source_ref=$(git rev-parse --abbrev-ref HEAD)
target_ref="main"
pattern=".*"
directories=true

while [[ "$#" -gt 0 ]]
do
    case $1 in
        -s|--source-ref) source_ref="$2";;
        -t|--target-ref) target_ref="$2";;
        -p|--pattern) pattern="$2";;
        --files-only) directories=false;;
    esac
    shift
done

if [ ! $(git rev-parse --verify $source_ref) ]; then
    echo "Source ref '$source_ref' does not exists."
    exit 1
fi

if [ ! $(git rev-parse --verify $target_ref) ]; then
    echo "Target ref '$target_ref' does not exists. Try for instance: 'git-updated-files --target-ref master'."
    exit 1
fi

updated_files=$(git diff --name-only $source_ref $target_ref)

export_files=()

filterMatchedPattern() {
    files=$1
    pattern=$2
    local export_files=()
    for f in $files
    do
        if [[ $f =~ $pattern ]]; then
            export_files+=(${f})
        fi
    done
    echo $export_files
}

for f in $updated_files
do
    if [[ $f =~ $pattern ]]; then
        if [ $directories ]; then
            export_files+=( $(dirname $f) )
        else 
            export_files+=(${f})
        fi
    fi
done

printf "%s\n" "${export_files[@]}" | sort -u | grep -v '^\.$'